import React, { useState } from "react";
import { FaEnvelope, FaPhoneAlt, FaMapMarkerAlt } from "react-icons/fa";

const Contact = () => {
  const [name, setName] = useState<string>("");
  const [email, setEmail] = useState<string>("");
  const [message, setMessage] = useState<string>("");
  const [errors, setErrors] = useState<{ name?: string; email?: string; message?: string }>({});
  const [isSubmitted, setIsSubmitted] = useState(false);

  const validateEmail = (email: string) => /\S+@\S+\.\S+/.test(email);

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();

    const newErrors: typeof errors = {};
    if (!name.trim()) newErrors.name = "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è.";
    if (!email.trim()) {
      newErrors.email = "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à email.";
    } else if (!validateEmail(email)) {
      newErrors.email = "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email.";
    }
    if (!message.trim()) newErrors.message = "–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.";

    if (Object.keys(newErrors).length > 0) {
      setErrors(newErrors);
      return;
    }

    setErrors({});
    setIsSubmitted(true);
    setName("");
    setEmail("");
    setMessage("");
  };

  return (
    <div className="flex flex-col items-center w-full min-h-screen bg-gradient-to-b from-green-100 to-white px-5 py-12">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <h1 className="text-5xl font-extrabold text-green-600 mb-8">–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ –º–Ω–æ–π</h1>

      {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
      <p className="text-lg text-gray-700 text-center max-w-2xl mb-10 leading-relaxed">
        –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è, —è –≤—Å–µ–≥–¥–∞ —Ä–∞–¥–∞ –æ–±—â–µ–Ω–∏—é! 
        –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ª—é–±–æ–π —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± —Å–≤—è–∑–∏.
      </p>

      {/* –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-8 w-full max-w-5xl">
        <div className="flex flex-col items-center bg-white shadow-lg p-6 rounded-lg hover:shadow-xl transition-shadow">
          <FaEnvelope className="text-4xl text-green-600 mb-4" />
          <h2 className="text-xl font-bold text-gray-800">–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞</h2>
          <p className="text-gray-600">sokirkina.dv@dvfu.ru</p>
        </div>
        <div className="flex flex-col items-center bg-white shadow-lg p-6 rounded-lg hover:shadow-xl transition-shadow">
          <FaPhoneAlt className="text-4xl text-blue-500 mb-4" />
          <h2 className="text-xl font-bold text-gray-800">–¢–µ–ª–µ—Ñ–æ–Ω</h2>
          <p className="text-gray-600">+7 (950) 907-46-08</p>
        </div>
        <div className="flex flex-col items-center bg-white shadow-lg p-6 rounded-lg hover:shadow-xl transition-shadow">
          <FaMapMarkerAlt className="text-4xl text-red-500 mb-4" />
          <h2 className="text-xl font-bold text-gray-800">–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ</h2>
          <p className="text-gray-600">–í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫, –†–æ—Å—Å–∏—è</p>
        </div>
      </div>

      {/* –°–∏–º–≤–æ–ª–∏—á–µ—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ */}
      <div className="mt-12 text-lg text-gray-700 text-center">
        –ò–ª–∏ –Ω–∞–π–¥–∏—Ç–µ –º–µ–Ω—è –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö! üòä
      </div>

      {/* –§–æ—Ä–º–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ */}
      <div className="mt-12 w-full max-w-3xl">
        <h2 className="text-3xl font-bold text-gray-800 mb-6 text-center">
          –ò–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ä–º—É
        </h2>
        {isSubmitted && (
          <div className="text-green-600 text-lg font-medium mb-6 text-center">
            –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ! –Ø —Å–≤—è–∂—É—Å—å —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.
          </div>
        )}
        <form onSubmit={handleSubmit} className="bg-white shadow-lg p-6 rounded-lg space-y-4">
          <div>
            <label htmlFor="name" className="block text-gray-700 font-medium">
              –ò–º—è
            </label>
            <input
              id="name"
              type="text"
              value={name}
              onChange={(e) => setName(e.target.value)}
              className={`w-full mt-1 p-2 border rounded-lg ${
                errors.name ? "border-red-500" : "border-gray-300"
              }`}
            />
            {errors.name && <p className="text-red-500 text-sm mt-1">{errors.name}</p>}
          </div>
          <div>
            <label htmlFor="email" className="block text-gray-700 font-medium">
              Email
            </label>
            <input
              id="email"
              type="email"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              className={`w-full mt-1 p-2 border rounded-lg ${
                errors.email ? "border-red-500" : "border-gray-300"
              }`}
            />
            {errors.email && <p className="text-red-500 text-sm mt-1">{errors.email}</p>}
          </div>
          <div>
            <label htmlFor="message" className="block text-gray-700 font-medium">
              –°–æ–æ–±—â–µ–Ω–∏–µ
            </label>
            <textarea
              id="message"
              value={message}
              onChange={(e) => setMessage(e.target.value)}
              className={`w-full mt-1 p-2 border rounded-lg ${
                errors.message ? "border-red-500" : "border-gray-300"
              }`}
              rows={4}
            />
            {errors.message && <p className="text-red-500 text-sm mt-1">{errors.message}</p>}
          </div>
          <button
            type="submit"
            className="w-full bg-green-600 text-white py-2 px-4 rounded-lg hover:bg-green-700 transition"
          >
            –û—Ç–ø—Ä–∞–≤–∏—Ç—å
          </button>
        </form>
      </div>
    </div>
  );
};

export default Contact;


